{
  "version": 3,
  "sources": ["../src/config.ts", "../src/hookEvents/corruptions.ts", "../src/hookEvents/scene.ts", "../src/module.ts"],
  "sourcesContent": ["export const chaosGods = ['khorne', 'nurgle', 'tzeentch', 'slaanesh'];\r\nexport const chaosTraits = [\r\n  'chaos',\r\n  'corruption',\r\n  'slaanesh',\r\n  'nurgle',\r\n  'khorne',\r\n  'tzeentch'\r\n];\r\n\r\nexport const defaultCorruptionDC = 15; // \uAE30\uBCF8 DC \uAC12 \uC124\uC815\r\n\r\nexport default {\r\n  MODULE_ID: 'pf2e-warhammer-fantasy-corruptions',\r\n  MODULE_NAME: 'Chaos Corruptions',\r\n  MODULE_TITLE: 'Chaos Corruption for Pathfinder second edition',\r\n  defaultCorruptionDC,\r\n  chaosGods\r\n};\r\n", "import config from '../config';\r\n\r\nexport const khorneCorruptionRoll = async (message: ChatMessagePF2e) => {\r\n  const context = message.getFlag('pf2e', 'context');\r\n  if (!context || context.type !== 'attack-roll') return;\r\n\r\n  const speaker = message.speaker;\r\n  const actor = ChatMessage.getSpeakerActor(speaker);\r\n  if (!actor) return;\r\n\r\n  // \uCF54\uB978 \uC624\uC5FC \uD6A8\uACFC \uC874\uC7AC \uC5EC\uBD80 \uD655\uC778\r\n  const khorneEffect = actor.items.find(\r\n    (item) => item.system.slug === 'chaos-corruptions-khorne-corruption'\r\n  );\r\n  if (!khorneEffect) return;\r\n  console.log(`${config.MODULE_ID} | khorneEffect found`, khorneEffect);\r\n\r\n  const corruptionLevel = khorneEffect.system?.badge?.value ?? 0;\r\n\r\n  // \uAD74\uB9BC \uD6C4, \uCD94\uAC00 \uC54C\uB9BC\uC744 \uBCF4\uB0B4\uAE30\r\n  //   const flavor = `\r\n  // <b>\uCF54\uB978 \uC624\uC5FC \uD6A8\uACFC \uBC1C\uC0DD!</b><br>\r\n  // \uC774 \uACF5\uACA9\uC740 \uCF54\uB978\uC758 \uC601\uD5A5\uC744 \uBC1B\uC558\uC2B5\uB2C8\uB2E4.<br>\r\n  // - \uC624\uC5FC \uC2A4\uD0DD: ${corruptionLevel}<br>\r\n  // - \uACF5\uACA9\uC790\uAC00 <b>Will Save</b>\uB97C \uC2DC\uB3C4\uD588\uB294\uC9C0 \uD655\uC778\uD574\uC8FC\uC138\uC694.<br>\r\n  // - \uC2E4\uD328 \uC2DC: AC\uAC00 \uAC00\uC7A5 \uB0AE\uC740 \uC544\uAD70\uC5D0\uAC8C \uACF5\uACA9 \uB300\uC0C1\uC744 \uC804\uD658\uD574\uC57C \uD569\uB2C8\uB2E4.<br>\r\n  // - \uB300\uC2E4\uD328 \uC2DC: <b>\uD574\uB2F9 \uACF5\uACA9\uC774 \uBA85\uC911\uD558\uBA74 \uD53C\uD574\uAC00 2\uBC30</b>\uC785\uB2C8\uB2E4.\r\n  // `;\r\n\r\n  //   ChatMessage.create({\r\n  //     speaker: speaker,\r\n  //     content: flavor,\r\n  //     whisper: ChatMessage.getWhisperRecipients(\"GM\")\r\n  //   });\r\n\r\n  if (game.settings.get(config.MODULE_ID, 'notifyChat')) {\r\n    await khorneEffect.toMessage(undefined, { create: true });\r\n  }\r\n};\r\n\r\n/**\r\n *\r\n * @param encounterPf2e\r\n * @param round\r\n * @returns\r\n */\r\nexport const nurgleCorruptionRoll = async (\r\n  combatantPf2e: CombatantPF2e,\r\n  encounterPf2e: EncounterPF2e\r\n) => {\r\n  const actor = combatantPf2e.actor;\r\n  if (!actor) return;\r\n\r\n  // \uC624\uC5FC \uD6A8\uACFC \uC874\uC7AC \uC5EC\uBD80 \uD655\uC778\r\n  const nurgleEffect = actor.items.find(\r\n    (item) => item.system.slug === 'chaos-corruptions-nurgle-corruption'\r\n  );\r\n  if (!nurgleEffect) return;\r\n\r\n  // console.log(`${config.MODULE_ID} | nurbleEffect found`, nurgleEffect);\r\n\r\n  const corruptionLevel = nurgleEffect.system?.badge?.value ?? 0;\r\n\r\n  // \uAD74\uB9BC \uD6C4, \uCD94\uAC00 \uC54C\uB9BC\uC744 \uBCF4\uB0B4\uAE30\r\n  //   const flavor = `\r\n  // <b>\uCF54\uB978 \uC624\uC5FC \uD6A8\uACFC \uBC1C\uC0DD!</b><br>\r\n  // \uC774 \uACF5\uACA9\uC740 \uCF54\uB978\uC758 \uC601\uD5A5\uC744 \uBC1B\uC558\uC2B5\uB2C8\uB2E4.<br>\r\n  // - \uC624\uC5FC \uC2A4\uD0DD: ${corruptionLevel}<br>\r\n  // - \uACF5\uACA9\uC790\uAC00 <b>Will Save</b>\uB97C \uC2DC\uB3C4\uD588\uB294\uC9C0 \uD655\uC778\uD574\uC8FC\uC138\uC694.<br>\r\n  // - \uC2E4\uD328 \uC2DC: AC\uAC00 \uAC00\uC7A5 \uB0AE\uC740 \uC544\uAD70\uC5D0\uAC8C \uACF5\uACA9 \uB300\uC0C1\uC744 \uC804\uD658\uD574\uC57C \uD569\uB2C8\uB2E4.<br>\r\n  // - \uB300\uC2E4\uD328 \uC2DC: <b>\uD574\uB2F9 \uACF5\uACA9\uC774 \uBA85\uC911\uD558\uBA74 \uD53C\uD574\uAC00 2\uBC30</b>\uC785\uB2C8\uB2E4.\r\n  // `;\r\n\r\n  //   ChatMessage.create({\r\n  //     speaker: speaker,\r\n  //     content: flavor,\r\n  //     whisper: ChatMessage.getWhisperRecipients(\"GM\")\r\n  //   });\r\n\r\n  if (game.settings.get(config.MODULE_ID, 'notifyChat')) {\r\n    await nurgleEffect.toMessage(undefined, { create: true });\r\n  }\r\n};\r\n\r\nconst getAffectedAuras = (token: TokenPF2e) => {\r\n  const tokenCenter = token.center;\r\n  const inRangeAuras = [];\r\n\r\n  // \uBAA8\uB4E0 \uC624\uB77C \uC778\uC2A4\uD134\uC2A4 \uC21C\uD68C\r\n  for (const sourceToken of canvas.tokens.placeables) {\r\n    if (token.id === sourceToken.id) continue; // \uC790\uAE30 \uC790\uC2E0\uC740 \uC81C\uC678\r\n    if (!sourceToken.document.auras) continue; // \uC624\uB77C\uAC00 \uC5C6\uB294 \uD1A0\uD070\uC740 \uC81C\uC678\r\n\r\n    const auras = sourceToken.document.auras;\r\n\r\n    // console.log(\"auras\", auras);\r\n\r\n    for (const [key, aura] of auras) {\r\n      // console.log(\"Aura Slug:\", aura.slug);\r\n      // console.log(\"Radius:\", aura.radius);\r\n      // console.log(\"Effects:\", aura.effects);\r\n\r\n      const distance = canvas.grid.measureDistance(\r\n        sourceToken.center,\r\n        tokenCenter\r\n      );\r\n      // canvas.grid.measurePath(sourceToken.center, tokenCenter);\r\n      const radius = aura.radius ?? 0;\r\n\r\n      if (distance <= radius) {\r\n        inRangeAuras.push({\r\n          from: sourceToken.name,\r\n          auraSlug: aura.slug,\r\n          distance,\r\n          radius\r\n        });\r\n      }\r\n    }\r\n  }\r\n  // console.log(\"\uC601\uD5A5\uBC1B\uB294 \uC624\uB77C \uBAA9\uB85D:\", inRangeAuras);\r\n  return inRangeAuras;\r\n};\r\n\r\nexport const checkCorruptionAuras = async (\r\n  combatantPf2e: CombatantPF2e,\r\n  encounterPf2e: EncounterPF2e\r\n) => {\r\n  const corruptionSlugs = {\r\n    'chaos-corruptions-chaos-undivided-aura':\r\n      'chaos-corruptions-chaos-undivided-corruption',\r\n    'chaos-corruptions-nurgle-aura': 'chaos-corruptions-nurgle-corruption',\r\n    'chaos-corruptions-khorne-aura': 'chaos-corruptions-khorne-corruption',\r\n    'chaos-corruptions-slaanesh-aura': 'chaos-corruptions-slaanesh-corruption',\r\n    'chaos-corruptions-tzeentch-aura': 'chaos-corruptions-tzeentch-corruption'\r\n  };\r\n\r\n  if (!game.settings.get(config.MODULE_ID, 'autoIncrease')) {\r\n    return;\r\n  }\r\n\r\n  const actorToken = combatantPf2e.token;\r\n  if (!actorToken) return;\r\n\r\n  const affectedAuras = getAffectedAuras(actorToken);\r\n\r\n  console.log(`${config.MODULE_ID} | affectedAuras`, affectedAuras);\r\n  // console.log(`affectedAuras`, affectedAuras);\r\n\r\n  if (affectedAuras.length === 0) return; // \uC601\uD5A5\uC744 \uBC1B\uB294 \uC624\uB77C\uAC00 \uC5C6\uC73C\uBA74 \uC885\uB8CC\r\n\r\n  for (const { auraSlug, from } of affectedAuras) {\r\n    const corruptionSlug =\r\n      corruptionSlugs[auraSlug as keyof typeof corruptionSlugs];\r\n\r\n    if (!corruptionSlug) {\r\n      console.log(`${config.MODULE_ID} | affectedAuras`, affectedAuras);\r\n      continue;\r\n    }\r\n\r\n    const corruptionEffect = actorToken.actor.items.find(\r\n      (item) => item.system.slug === corruptionSlug\r\n    );\r\n\r\n    if (!corruptionEffect) {\r\n      console.log(\r\n        `${config.MODULE_ID} | ${from}'s ${auraSlug} aura has no corresponding corruption effect`\r\n      );\r\n      continue;\r\n    }\r\n\r\n    const currentValue = corruptionEffect.system.badge.value;\r\n    const maxValue = corruptionEffect.system.badge.max;\r\n\r\n    if (currentValue >= maxValue) {\r\n      console.log(\r\n        `${config.MODULE_ID} | ${from}'s ${auraSlug} corruption effect is already at maximum`\r\n      );\r\n      continue;\r\n    }\r\n\r\n    // corruptionEffect.system.badge.value += 1; // \uC624\uC5FC \uC2A4\uD0DD \uC99D\uAC00\r\n    await corruptionEffect.update({\r\n      'system.badge.value': corruptionEffect.system.badge.value + 1\r\n    });\r\n  }\r\n};\r\n", "import config from '../config';\r\n\r\n/**\r\n * \uC0C9\uC0C1\uACFC \uC54C\uD30C\uAC12\uC744 \uAE30\uBC18\uC73C\uB85C RGBA \uC0C9\uC0C1 \uBB38\uC790\uC5F4\uC744 \uC0DD\uC131\uD569\uB2C8\uB2E4\r\n * @param hexColor 16\uC9C4\uC218 \uC0C9\uC0C1 \uCF54\uB4DC (\uC608: #FF2400)\r\n * @param alpha \uC54C\uD30C\uAC12 (0-1 \uC0AC\uC774)\r\n * @returns RGBA \uC0C9\uC0C1 \uBB38\uC790\uC5F4\r\n */\r\nconst hexToRgba = (hexColor: string, alpha: number): string => {\r\n  // \uC0C9\uC0C1 \uCF54\uB4DC\uC5D0\uC11C # \uC81C\uAC70\uD558\uACE0 RGB \uAC12 \uCD94\uCD9C\r\n  const hex = hexColor.replace('#', '');\r\n  const r = parseInt(hex.substring(0, 2), 16);\r\n  const g = parseInt(hex.substring(2, 4), 16);\r\n  const b = parseInt(hex.substring(4, 6), 16);\r\n\r\n  return `rgba(${r}, ${g}, ${b}, ${alpha})`;\r\n};\r\n\r\n/**\r\n * \uC624\uC5FC \uC720\uD615\uBCC4 \uC0C9\uC0C1 \uC815\uC758\r\n */\r\nconst CORRUPTION_COLORS = {\r\n  'chaos-corruptions-khorne-corruption': '#FF2400', // \uCF54\uB978\r\n  'chaos-corruptions-nurgle-corruption': '#324C09', // \uB108\uAE00\r\n  'chaos-corruptions-tzeentch-corruption': '#8A2BE2', // \uC820\uCDE8\r\n  'chaos-corruptions-slaanesh-corruption': '#DA70D6' // \uC2AC\uB77C\uB124\uC26C\r\n};\r\n\r\n/**\r\n * \uC120\uD0DD\uB41C \uD1A0\uD070\uC758 \uC624\uC5FC\uB3C4\uC5D0 \uB530\uB77C \uC2DC\uAC01\uC801 \uD6A8\uACFC\uB97C \uC801\uC6A9\uD569\uB2C8\uB2E4\r\n * @param token \uC120\uD0DD\uB41C \uD1A0\uD070\r\n * @param controlled \uD1A0\uD070\uC774 \uC120\uD0DD\uB418\uC5C8\uB294\uC9C0 \uC5EC\uBD80\r\n */\r\nexport const updateCorruptionVisuals = (\r\n  token: TokenPF2e,\r\n  controlled: boolean\r\n): void => {\r\n  const corruptionLayer = document.getElementById('corruption-layer');\r\n\r\n  // \uC120\uD0DD\uB418\uC9C0 \uC54A\uC558\uAC70\uB098 \uB808\uC774\uC5B4\uAC00 \uC5C6\uC73C\uBA74 \uD6A8\uACFC \uC81C\uAC70\r\n  if (!controlled || !corruptionLayer) {\r\n    corruptionLayer?.style.removeProperty('background-color');\r\n    return;\r\n  }\r\n\r\n  const actor = token.actor;\r\n  if (!actor) return;\r\n\r\n  // \uAC00\uC7A5 \uB192\uC740 \uC624\uC5FC\uB3C4\uB97C \uCC3E\uC2B5\uB2C8\uB2E4\r\n  let highestCorruption: { slug: string; color: string; level: number } | null =\r\n    null;\r\n  let highestLevel = 0;\r\n\r\n  for (const [slug, color] of Object.entries(CORRUPTION_COLORS)) {\r\n    const effect = actor.items.find(\r\n      (item: ItemPF2e) => item.system.slug === slug\r\n    );\r\n    if (effect && effect.system?.badge?.value) {\r\n      const level = effect.system.badge.value;\r\n      if (level > highestLevel) {\r\n        highestLevel = level;\r\n        highestCorruption = { slug, color, level };\r\n      }\r\n    }\r\n  }\r\n\r\n  // \uC624\uC5FC \uD6A8\uACFC \uC801\uC6A9\r\n  if (highestCorruption) {\r\n    // \uB2E8\uACC4\uC5D0 \uB530\uB77C \uC54C\uD30C\uAC12 \uACB0\uC815 (0.1 * \uB2E8\uACC4)\r\n    const alpha = Math.min(0.1 * highestCorruption.level, 0.7); // \uCD5C\uB300 0.7\uB85C \uC81C\uD55C\r\n    const bgColor = hexToRgba(highestCorruption.color, alpha);\r\n\r\n    corruptionLayer.style.backgroundColor = bgColor;\r\n    console.log(\r\n      `${config.MODULE_ID} | Applied corruption visual: ${highestCorruption.slug} level ${highestCorruption.level}`\r\n    );\r\n  } else {\r\n    corruptionLayer.style.removeProperty('background-color');\r\n  }\r\n};\r\n\r\n/**\r\n * FoundryVTT \uCD08\uAE30\uD654 \uD6C4 \uC624\uC5FC\uB3C4 \uC2DC\uAC01\uD654 \uB808\uC774\uC5B4\uB97C \uC0DD\uC131\uD569\uB2C8\uB2E4\r\n */\r\nexport const initCorruptionLayer = (): void => {\r\n  const hud = document.getElementById('hud');\r\n  if (!hud) return;\r\n\r\n  // \uC774\uBBF8 \uB808\uC774\uC5B4\uAC00 \uC788\uC73C\uBA74 \uC0DD\uC131\uD558\uC9C0 \uC54A\uC74C\r\n  if (hud.querySelector('#corruption-layer')) return;\r\n\r\n  const corruptionLayer = document.createElement('div');\r\n  corruptionLayer.id = 'corruption-layer';\r\n  corruptionLayer.style.position = 'absolute';\r\n  corruptionLayer.style.top = '0';\r\n  corruptionLayer.style.left = '0';\r\n  corruptionLayer.style.width = '100%';\r\n  corruptionLayer.style.height = '100%';\r\n  corruptionLayer.style.pointerEvents = 'none';\r\n  corruptionLayer.style.zIndex = '60'; // hud \uB0B4\uC5D0\uC11C \uC801\uC808\uD55C z-index \uC124\uC815\r\n  corruptionLayer.style.transition = 'background-color 0.5s ease';\r\n\r\n  console.log(`${config.MODULE_ID} | Creating corruption visualization layer`);\r\n  hud.appendChild(corruptionLayer);\r\n};\r\n", "import config from './config';\r\nimport { defaultCorruptionDC } from './config';\r\nimport {\r\n  checkCorruptionAuras,\r\n  khorneCorruptionRoll,\r\n  nurgleCorruptionRoll\r\n} from './hookEvents/corruptions';\r\nimport {\r\n  initCorruptionLayer,\r\n  updateCorruptionVisuals\r\n} from './hookEvents/scene';\r\n\r\n/**\r\n * \uB85C\uCEEC\uB77C\uC774\uC988 \uD5EC\uD37C\r\n * @param key localization \uD0A4\r\n * @returns \uB85C\uCEEC\uB77C\uC774\uC988\uB41C \uBB38\uC790\uC5F4\r\n */\r\nexport function localize(key: string): string {\r\n  return game.i18n.localize(`${config.MODULE_ID}.${key}`);\r\n}\r\n\r\n/**\r\n * Initialize the module\r\n */\r\nHooks.once('init', () => {\r\n  console.log(`${config.MODULE_ID} | Initializing ${config.MODULE_NAME}`);\r\n\r\n  // game.settings.register(config.MODULE_ID, 'debug', {\r\n  //   name: localize('settings.debug.name'),\r\n  //   hint: localize('settings.debug.hint'),\r\n  //   scope: 'client',\r\n  //   config: true,\r\n  //   type: Boolean,\r\n  //   default: false\r\n  // });\r\n\r\n  game.settings.register(config.MODULE_ID, 'notifyChat', {\r\n    name: localize('settings.notifyChat.name'),\r\n    hint: localize('settings.notifyChat.hint'),\r\n    scope: 'client',\r\n    config: true,\r\n    type: Boolean,\r\n    default: true\r\n  });\r\n\r\n  game.settings.register(config.MODULE_ID, 'autoIncrease', {\r\n    name: localize('settings.autoIncrease.name'),\r\n    hint: localize('settings.autoIncrease.hint'),\r\n    scope: 'client',\r\n    config: true,\r\n    type: Boolean,\r\n    default: true\r\n  });\r\n\r\n  // if (game.settings.get(config.MODULE_ID, 'notifyChat')) {\r\n  //   CONFIG.debug.hooks = true;\r\n  // }\r\n  // \uB514\uBC84\uADF8 \uBAA8\uB4DC \uD65C\uC131\uD654 (FoundryVTT v13\uC5D0\uC11C\uB294 \uC804\uC5ED CONFIG \uAC1D\uCCB4\uB97C \uD1B5\uD574 \uC811\uADFC)\r\n  if (typeof CONFIG !== 'undefined') {\r\n    CONFIG.debug.hooks = true;\r\n  }\r\n\r\n  if (game.system.id !== 'pf2e') {\r\n    console.warn(\r\n      `${config.MODULE_NAME} | This module is only compatible with the PF2E system.`\r\n    );\r\n    return;\r\n  }\r\n\r\n  libWrapper.register(\r\n    config.MODULE_ID,\r\n    'TextEditor.enrichHTML',\r\n    async function (wrapped, content, options) {\r\n      // \uB798\uD37C \uD568\uC218\r\n      const sceneDc =\r\n        canvas.scene?.getFlag(config.MODULE_ID, 'corruptionDC') ?? 15; //canvas.scene?.getFlag(pf2e-warhammer-fantasy-corruptions, 'corruptionDC')\r\n      content = content.replace(\r\n        /@ChaosCheck\\[(.*?)\\]\\{(.*?)\\}/g,\r\n        (match, params, label) => {\r\n          // params\uC5D0 dc\uAC00 \uC774\uBBF8 \uC788\uC73C\uBA74 \uB36E\uC5B4\uC4F0\uC9C0 \uC54A\uC74C\r\n          const hasDC = params.includes('dc:');\r\n          let newParams = hasDC ? params : `${params}|dc:${sceneDc}`;\r\n          return `@Check[${newParams}]{${label}}`;\r\n        }\r\n      );\r\n\r\n      // console.log('Patched @ChaosCheck', content, options);\r\n\r\n      return await wrapped(content, options); // \uC6D0\uBCF8 \uBA54\uC11C\uB4DC \uD638\uCD9C\r\n    },\r\n    'WRAPPER' // \uB798\uD37C \uD0C0\uC785 (PF2e \uD328\uCE58 \uC774\uD6C4 \uC2E4\uD589)\r\n  );\r\n\r\n  initializeHookEvents();\r\n\r\n  // TODO Register settings\r\n});\r\n\r\nfunction initializeHookEvents() {\r\n  Hooks.on('createChatMessage', khorneCorruptionRoll);\r\n  Hooks.on('pf2e.startTurn', nurgleCorruptionRoll);\r\n  Hooks.on('pf2e.startTurn', checkCorruptionAuras);\r\n}\r\n\r\nconst corruptionDcFlag = `flags.${config.MODULE_ID}.corruptionDC`;\r\n\r\nHooks.on('renderSceneConfig', (app, html, data) => {\r\n  const sceneOptionLabel = localize('scene.corruptionDC.label');\r\n  const sceneOptionHint = localize('scene.corruptionDC.hint');\r\n\r\n  const dcOption = `<div class=\"form-group\">\r\n        <label for=\"${corruptionDcFlag}\">${sceneOptionLabel}</label>\r\n        <div class=\"form-fields\">\r\n          <input type=\"number\" id=\"${corruptionDcFlag}\"\r\n            name=\"${corruptionDcFlag}\" value=\"${app.object.getFlag(config.MODULE_ID, 'corruptionDC') ?? defaultCorruptionDC}\" placeholder=\"Defult is 15\">\r\n        </div>\r\n        <p class=\"hint\">${sceneOptionHint}</p>\r\n    </div>`;\r\n\r\n  html.find('section.tab[data-tab=\"pf2e\"]').append(dcOption);\r\n});\r\n\r\nHooks.on('preUpdateScene', (scene, updateData) => {\r\n  console.log(`${config.MODULE_ID} | preUpdateScene`, scene, updateData);\r\n\r\n  const dc = foundry.utils.getProperty(updateData, corruptionDcFlag);\r\n  if (dc !== undefined) {\r\n    // DC \uAC12\uC744 \uC2E4\uC81C Scene \uB370\uC774\uD130\uC5D0 \uC800\uC7A5\r\n    foundry.utils.getProperty(scene, corruptionDcFlag, dc);\r\n  }\r\n});\r\n\r\n// // \uC544\uC774\uD15C \uC2DC\uD2B8 \uB80C\uB354\uB9C1 \uC2DC \uD1A0\uD070 \uCE58\uD658\r\n// Hooks.on('renderItemSheet', (app, html, data) => {\r\n//   const dc = canvas.scene?.getFlag(config.MODULE_ID, 'corruptionDC') ?? 15;\r\n//   html[0].querySelectorAll('.item-description').forEach((desc) => {\r\n//     desc.innerHTML = desc.innerHTML.replace(/@sceneCorruptionDC/g, dc);\r\n//   });\r\n// });\r\n\r\n// // \uCC44\uD305 \uBA54\uC2DC\uC9C0 \uC0DD\uC131 \uC804 \uD1A0\uD070 \uCE58\uD658\r\n// Hooks.on('preCreateChatMessage', (message, options, userId) => {\r\n//   const dc = canvas.scene?.getFlag(config.MODULE_ID, 'corruptionDC') ?? 15;\r\n//   if (message.content.includes('@sceneCorruptionDc')) {\r\n//     message.content = message.content.replace(/@sceneCorruptionDc/g, dc);\r\n//   }\r\n//   return message;\r\n// });\r\n\r\n// \uC52C\uC774 \uB85C\uB4DC\uB420 \uB54C \uC624\uC5FC\uB3C4 \uC2DC\uAC01\uD654 \uB808\uC774\uC5B4 \uC0DD\uC131\r\nHooks.once('canvasReady', initCorruptionLayer);\r\n\r\n// \uD1A0\uD070 \uC120\uD0DD \uC2DC \uC624\uC5FC\uB3C4 \uC2DC\uAC01\uD654 \uC5C5\uB370\uC774\uD2B8\r\nHooks.on('controlToken', (token, controlled) => {\r\n  updateCorruptionVisuals(token, controlled);\r\n});\r\n\r\n// \uC544\uC774\uD15C \uC5C5\uB370\uC774\uD2B8 \uC2DC \uC624\uC5FC\uB3C4 \uC2DC\uAC01\uD654 \uC5C5\uB370\uC774\uD2B8\r\nHooks.on('updateItem', (item, changes, options, userId) => {\r\n  // badge \uAC12\uC774 \uBCC0\uACBD\uB418\uC5C8\uB294\uC9C0 \uD655\uC778\r\n  if (changes.system?.badge?.value !== undefined) {\r\n    // \uC624\uC5FC \uAD00\uB828 \uC544\uC774\uD15C\uC778\uC9C0 \uD655\uC778\r\n    const isCorruptionItem =\r\n      item.system?.slug?.includes('chaos-corruptions') &&\r\n      item.system?.slug?.includes('corruption');\r\n\r\n    if (isCorruptionItem) {\r\n      // \uC544\uC774\uD15C\uC774 \uC18D\uD55C \uC561\uD130 \uCC3E\uAE30\r\n      const actor = item.parent;\r\n      if (!actor) return;\r\n\r\n      // \uC561\uD130\uC758 \uD1A0\uD070 \uCC3E\uAE30\r\n      const tokens = canvas.tokens.placeables.filter(\r\n        (t) => t.actor?.id === actor.id\r\n      );\r\n\r\n      // \uAC01 \uD1A0\uD070\uC5D0 \uB300\uD574 \uC120\uD0DD \uC0C1\uD0DC \uD655\uC778 \uD6C4 \uC2DC\uAC01\uD654 \uC5C5\uB370\uC774\uD2B8\r\n      tokens.forEach((token) => {\r\n        if (token.controlled) {\r\n          console.log(\r\n            `${config.MODULE_ID} | Updating corruption visuals for ${token.name} due to badge change`\r\n          );\r\n          updateCorruptionVisuals(token, true);\r\n        }\r\n      });\r\n    }\r\n  }\r\n});\r\n"],
  "mappings": "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",
  "names": []
}
